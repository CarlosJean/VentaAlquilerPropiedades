//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CompraPropiedades.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CompraPropiedadesEntities2 : DbContext
    {
        public CompraPropiedadesEntities2()
            : base("name=CompraPropiedadesEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int REGISTERPUBLICATION(string title, string description, Nullable<int> idUser, Nullable<int> idSector, string ubicationCoordinates, Nullable<int> propertyType, Nullable<float> price, Nullable<int> publicationType)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(int));
    
            var idSectorParameter = idSector.HasValue ?
                new ObjectParameter("IdSector", idSector) :
                new ObjectParameter("IdSector", typeof(int));
    
            var ubicationCoordinatesParameter = ubicationCoordinates != null ?
                new ObjectParameter("UbicationCoordinates", ubicationCoordinates) :
                new ObjectParameter("UbicationCoordinates", typeof(string));
    
            var propertyTypeParameter = propertyType.HasValue ?
                new ObjectParameter("PropertyType", propertyType) :
                new ObjectParameter("PropertyType", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(float));
    
            var publicationTypeParameter = publicationType.HasValue ?
                new ObjectParameter("PublicationType", publicationType) :
                new ObjectParameter("PublicationType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REGISTERPUBLICATION", titleParameter, descriptionParameter, idUserParameter, idSectorParameter, ubicationCoordinatesParameter, propertyTypeParameter, priceParameter, publicationTypeParameter);
        }
    
        public virtual int REGISTERUSER(string name, string lastName, string email, string password, string phone, string address)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REGISTERUSER", nameParameter, lastNameParameter, emailParameter, passwordParameter, phoneParameter, addressParameter);
        }
    
        public virtual ObjectResult<string> spUnablePublication(Nullable<int> idPublication_IN, ObjectParameter codError, ObjectParameter msjError)
        {
            var idPublication_INParameter = idPublication_IN.HasValue ?
                new ObjectParameter("idPublication_IN", idPublication_IN) :
                new ObjectParameter("idPublication_IN", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUnablePublication", idPublication_INParameter, codError, msjError);
        }
    }
}
